#!/usr/bin/env sh
# This file is part of libertine linux's package libertine_filesystem. It is subject to the license terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/libertine-linux-packages/libertine_filesystem/master/COPYRIGHT. No part of libertine linux's package libertine_filesystem, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2016 The developers of libertine linux's package libertine_filesystem. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/libertine-linux-packages/libertine_filesystem/master/COPYRIGHT.


set -e
set -u
set -f


# Uses options:-
#   tunnelling-user         USER  (not UID) defaults to root
#	tunnelling-group        GROUP (not GID) defaults to root
#   tunelling-clone-device  DEV   defaults to /dev/net/tun
# Note that interface should start 'tun*' for tunnelling to be recognised
libertine_network_if_pre_up_tunnelling_main()
{
	. /usr/lib/network.functions
	
	if core_variable_isUnsetOrEmpty IFACE; then
		return 0
	fi
	local weAreConfiguringInterface="$IFACE"
	
	local specificTunnellingOptionsUsed=false
	
	if core_variable_isSet IF_TUNNELLING_USER; then
		local userName="$IF_TUNNELLING_USER"
		specificTunnellingOptionsUsed=true
	else
		local userName='root'
	fi

	if core_variable_isSet IF_TUNNELLING_GROUP; then
		local groupName="$IF_TUNNELLING_GROUP"
		specificTunnellingOptionsUsed=true
	else
		local groupName='root'
	fi

	if core_variable_isSet IF_TUNNELLING_CLONE_DEVICE; then
		local cloneDevice="$IF_TUNNELLING_CLONE_DEVICE"
		specificTunnellingOptionsUsed=true
	else
		if [ -e /dev/misc/net/tun ]; then
			local cloneDevice=/dev/misc/net/tun
		elif [ -e /dev/net/tun ]; then
			local cloneDevice=/dev/net/tun
		else
			if $specificTunnellingOptionsUsed; then
				libertine_network_message "tunctl default clone devices /dev/misc/net/tun and /dev/net/tun are not present, can not enable tun devices"
				return 1
			fi
			return 0
		fi
	fi
	
	case "$weAreConfiguringInterface" in
		
		tun*)
			:
		;;
		
		*)
			if ! $specificTunnellingOptionsUsed; then
				# Not a tun device
				return 0
			fi
		;;
	esac

	if [ ! -e "$cloneDevice" ]; then
		libertine_network_message "tunctl clone device '$cloneDevice' is not present, can not enable tun devices"
	fi
	
	if ! command -v tunctl 1>/dev/null 2>/dev/null; then
		libertine_network_message "tunctl is missing from PATH, can not enable TUN devices"
		return 0
	fi
	
	tunctl -f "$cloneDevice" -t "$weAreConfiguringInterface" -u "$userName" -g "$groupName"
}

libertine_network_if_pre_up_tunnelling_main "$@"
